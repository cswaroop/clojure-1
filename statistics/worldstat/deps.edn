{
 :paths ["resources"]

 :aliases {:dev {:extra-paths ["dev-resources" "classes"]
                 :extra-deps {org.clojure/clojure {:mvn/version "1.10.1"}
                              thheller/shadow-cljs {:mvn/version "2.11.4"}
                              clj-kondo/clj-kondo {:mvn/version "2020.10.10"}
                              day8.re-frame/re-frame-10x {:mvn/version "0.7.0"}
                              metosin/reagent-dev-tools {:mvn/version "0.2.1"}
                              }}
           :test {:extra-paths ["test/clj"]
                  :extra-deps {lambdaisland/kaocha {:mvn/version "1.0-612"}
                               lambdaisland/kaocha-cljs {:mvn/version "0.0-71"}}}
           ;; Let's learn to use a common part already now since in the next exercise we create frontend with re-frame.
           :common {:extra-paths ["src/cljc"]
                    :extra-deps {metosin/reitit {:mvn/version "0.5.10"}
                                 aero/aero {:mvn/version "1.1.6"}
                                 metosin/potpuri {:mvn/version "0.5.2"}
                                 integrant/repl {:mvn/version "0.3.1"}
                                 }}
           :backend {:extra-paths ["src/clj"]
                     :extra-deps {metosin/ring-http-response {:mvn/version "0.9.1"}
                                  integrant/integrant {:mvn/version "0.8.0"}
                                  tick/tick {:mvn/version "0.4.27-alpha"}
                                  org.clojure/data.json {:mvn/version "1.0.0"}
                                  org.clojure/data.csv {:mvn/version "1.0.0"}
                                  org.clojure/tools.logging {:mvn/version "1.0.0"}
                                  commons-logging/commons-logging {:mvn/version "1.2"}
                                  ch.qos.logback/logback-classic {:mvn/version "1.2.3"}
                                  ring/ring-core {:mvn/version "1.8.0"}
                                  ring/ring-jetty-adapter {:mvn/version "1.7.1"}
                                  ring/ring-json {:mvn/version "0.4.0"}
                                  ring/ring-defaults {:mvn/version "0.3.2"}
                                  buddy/buddy-sign {:mvn/version "3.1.0"}
                                  org.eclipse.jetty/jetty-client {:mvn/version "9.4.26.v20200117"}
                                  clj-http/clj-http {:mvn/version "3.10.1"}
                                  nrepl/nrepl {:mvn/version "0.8.2"}
                                  }}

           :frontend {:extra-paths ["src/cljs"]
                      :extra-deps {org.clojure/clojurescript {:mvn/version "1.10.764"}
                                   reagent/reagent {:mvn/version "0.10.0"
                                                    :exclusions [cljsjs.react-dom/cljsjs.react-dom]}
                                   re-frame/re-frame {:mvn/version "1.1.1"}
                                   day8.re-frame/http-fx {:mvn/version "0.2.1"}
                                   binaryage/devtools {:mvn/version "1.0.2"}
                                   }}
           :css {:extra-deps {deraen/sass4clj {:mvn/version "0.5.1"}
                              ch.qos.logback/logback-classic {:mvn/version "1.3.0-alpha5"}}
                 :main-opts ["-m" "sass4clj.main"
                             "--source-paths" "src/cljs/simplefrontend"
                             "--inputs" "main.scss"
                             "--target-path" "target/shadow/dev/resources/public/css"]}

           ;; Test runner in console.
           :test-runner {:extra-paths ["test"]
                         :extra-deps {com.cognitect/test-runner {:git/url "https://github.com/cognitect-labs/test-runner.git"
                                                                 :sha "209b64504cb3bd3b99ecfec7937b358a879f55c1"}}
                         :main-opts ["-m" "cognitect.test-runner"]}

           ;; Depstar for building fat jar.
           :uberjar {:extra-deps {seancorfield/depstar {:mvn/version "0.5.1"}}
                     :extra-paths ["prod-resources" "target/shadow/prod/resources"]
                     :main-opts ["-m" "hf.depstar.uberjar" "target/simpleserver.jar"]}
           :outdated {:extra-deps {olical/depot {:mvn/version "RELEASE"}}
                      :main-opts ["-m" "depot.outdated.main" "-a" "outdated"]}
           :clj-kondo {:extra-deps {clj-kondo/clj-kondo {:mvn/version "2020.10.10"}}
                       :main-opts ["-m" "clj-kondo.main"]}
           ;; Cider specific.
           :cider-clj {:extra-deps {org.clojure/clojure {:mvn/version "1.10.1"}
                                    cider/cider-nrepl {:mvn/version "0.22.4"}}
                       :main-opts ["-m" "nrepl.cmdline" "--middleware" "[cider.nrepl/cider-middleware]"]}}
 }
